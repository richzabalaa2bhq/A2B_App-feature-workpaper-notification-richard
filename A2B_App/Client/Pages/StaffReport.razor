@page "/staffreport"

@using A2B_App.Shared.Utilities
@using A2B_App.Client.Services
@using Newtonsoft.Json
@inject IToastService toastService
@inject HttpClient Http
@inject Task<ClientSettings> _getSettings

@if (Link != string.Empty)
{
    @*<iframe id="staffreport"
                title="staffreport"
                onload="window.parent.scrollTo(0,0)"
                allowtransparency="true"
                allowfullscreen="true"
                allow="geolocation; microphone; camera"
                src="@Link"
                frameborder="0"
                style="
                  min-width: 100%;
                  height:100%;
                  border:none;"
                scrolling="yes">
        </iframe>*@

    <div style="">
        <iframe 
                src="@Link" 
                frameborder="0" 
                style="display: block; height: 100vh; width: 80vw;"
                framespacing="0" 
                allowfullscreen="true"
                ></iframe>
    </div>
}


@code {

    private string Link { get; set; }

    private List<ExternalLink> ListExternalLink { get; set; }
    private AdminService adminService;
    private ClientSettings settings;

    protected override async Task OnInitializedAsync()
    {
        settings = await _getSettings;
        adminService = new AdminService(settings);
        GetLink();

    }

    private async void GetLink()
    {
        try
        {
            ListExternalLink = new List<ExternalLink>();
            var httpResponse = await adminService.GetExternalLink(Http);
            if (httpResponse.StatusCode == System.Net.HttpStatusCode.OK)
            {
                string result = httpResponse.Content.ReadAsStringAsync().Result.ToString();
                ListExternalLink = JsonConvert.DeserializeObject<List<ExternalLink>>(result);

                var externalLink = ListExternalLink.Where(x => x.Name.Equals("StaffReport")).FirstOrDefault();
                if (externalLink != null)
                {
                    Link = externalLink.Link;
                }
            }
            else
            {
                toastService.ShowError($"Error fetching external link from server");
            }
        }
        catch (Exception ex)
        {
            toastService.ShowError($"Error fetching external link from server");

        }

        this.StateHasChanged();
    }

}
